//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MongoProviders {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MongoProviders.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization rule names cannot contain the &apos;{0}&apos; character..
        /// </summary>
        internal static string Auth_rule_names_cant_contain_char {
            get {
                return ResourceManager.GetString("Auth_rule_names_cant_contain_char", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to session database..
        /// </summary>
        internal static string Cant_connect_sql_session_database {
            get {
                return ResourceManager.GetString("Cant_connect_sql_session_database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to session database. The connection string (server=&apos;{1}&apos;, database=&apos;{2}&apos;) was returned by an instance of the IPartitionResolver type &apos;{0}&apos;..
        /// </summary>
        internal static string Cant_connect_sql_session_database_partition_resolver {
            get {
                return ResourceManager.GetString("Cant_connect_sql_session_database_partition_resolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Child nodes are not allowed..
        /// </summary>
        internal static string Config_base_no_child_nodes {
            get {
                return ResourceManager.GetString("Config_base_no_child_nodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized attribute &apos;{0}&apos;. Note that attribute names are case-sensitive..
        /// </summary>
        internal static string Config_base_unrecognized_attribute {
            get {
                return ResourceManager.GetString("Config_base_unrecognized_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;connectionStringName&apos; is missing or empty..
        /// </summary>
        internal static string Connection_name_not_specified {
            get {
                return ResourceManager.GetString("Connection_name_not_specified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection name &apos;{0}&apos; was not found in the applications configuration or the connection string is empty..
        /// </summary>
        internal static string Connection_string_not_found {
            get {
                return ResourceManager.GetString("Connection_string_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database filename can not contain the following 3 characters: [ (open square brace), ] (close square brace) and &apos; (single quote).
        /// </summary>
        internal static string DbFileName_can_not_contain_invalid_chars {
            get {
                return ResourceManager.GetString("DbFileName_can_not_contain_invalid_chars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; attribute cannot be an empty string..
        /// </summary>
        internal static string Empty_attribute {
            get {
                return ResourceManager.GetString("Empty_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing &lt;sessionState&gt; sqlConnectionString attribute: {0}.
        /// </summary>
        internal static string Error_parsing_session_sqlConnectionString {
            get {
                return ResourceManager.GetString("Error_parsing_session_sqlConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing the SQL connection string returned by an instance of the IPartitionResolver type &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string Error_parsing_sql_partition_resolver_string {
            get {
                return ResourceManager.GetString("Error_parsing_sql_partition_resolver_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; attribute must be set to &apos;true&apos; or &apos;false&apos;..
        /// </summary>
        internal static string Invalid_boolean_attribute {
            get {
                return ResourceManager.GetString("Invalid_boolean_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{1}&apos; specified for the maxEventDetailsLength attribute of the &apos;{0}&apos; provider is invalid. It should be between 0 and 1073741823..
        /// </summary>
        internal static string Invalid_max_event_details_length {
            get {
                return ResourceManager.GetString("Invalid_max_event_details_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;{0}&apos; is invalid in the configuration of the &apos;{1}&apos; provider. The attribute must be set to a non-negative integer..
        /// </summary>
        internal static string Invalid_provider_positive_attributes {
            get {
                return ResourceManager.GetString("Invalid_provider_positive_attributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session state information is invalid and might be corrupted..
        /// </summary>
        internal static string Invalid_session_state {
            get {
                return ResourceManager.GetString("Invalid_session_state", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to login to session state server for user &apos;{0}&apos;..
        /// </summary>
        internal static string Login_failed_sql_session_database {
            get {
                return ResourceManager.GetString("Login_failed_sql_session_database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user account has been locked out..
        /// </summary>
        internal static string Membership_AccountLockOut {
            get {
                return ResourceManager.GetString("Membership_AccountLockOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom password validation failed..
        /// </summary>
        internal static string Membership_Custom_Password_Validation_Failure {
            get {
                return ResourceManager.GetString("Membership_Custom_Password_Validation_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password-answer supplied is invalid..
        /// </summary>
        internal static string Membership_InvalidAnswer {
            get {
                return ResourceManager.GetString("Membership_InvalidAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The E-mail supplied is invalid..
        /// </summary>
        internal static string Membership_InvalidEmail {
            get {
                return ResourceManager.GetString("Membership_InvalidEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password supplied is invalid.  Passwords must conform to the password strength requirements configured for the default provider..
        /// </summary>
        internal static string Membership_InvalidPassword {
            get {
                return ResourceManager.GetString("Membership_InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider user key supplied is invalid.  It must be of type System.Guid..
        /// </summary>
        internal static string Membership_InvalidProviderUserKey {
            get {
                return ResourceManager.GetString("Membership_InvalidProviderUserKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password-question supplied is invalid.  Note that the current provider configuration requires a valid password question and answer.  As a result, a CreateUser overload that accepts question and answer parameters must also be used..
        /// </summary>
        internal static string Membership_InvalidQuestion {
            get {
                return ResourceManager.GetString("Membership_InvalidQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one user has the specified e-mail address..
        /// </summary>
        internal static string Membership_more_than_one_user_with_email {
            get {
                return ResourceManager.GetString("Membership_more_than_one_user_with_email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Membership Provider has not been configured to support password retrieval..
        /// </summary>
        internal static string Membership_PasswordRetrieval_not_supported {
            get {
                return ResourceManager.GetString("Membership_PasswordRetrieval_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username can not contain the &apos;%&apos; symbol..
        /// </summary>
        internal static string Membership_username_can_not_contain_percent {
            get {
                return ResourceManager.GetString("Membership_username_can_not_contain_percent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user was not found..
        /// </summary>
        internal static string Membership_UserNotFound {
            get {
                return ResourceManager.GetString("Membership_UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password-answer supplied is incorrect..
        /// </summary>
        internal static string Membership_WrongAnswer {
            get {
                return ResourceManager.GetString("Membership_WrongAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password supplied is incorrect..
        /// </summary>
        internal static string Membership_WrongPassword {
            get {
                return ResourceManager.GetString("Membership_WrongPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MongoDB membership provider.
        /// </summary>
        internal static string MembershipProvider_description {
            get {
                return ResourceManager.GetString("MembershipProvider_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minRequiredNonalphanumericCharacters can not be greater than minRequiredPasswordLength..
        /// </summary>
        internal static string MinRequiredNonalphanumericCharacters_can_not_be_more_than_MinRequiredPasswordLength {
            get {
                return ResourceManager.GetString("MinRequiredNonalphanumericCharacters_can_not_be_more_than_MinRequiredPasswordLeng" +
                        "th", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; attribute must be specified on the &apos;{1}&apos; tag..
        /// </summary>
        internal static string Missing_required_attribute {
            get {
                return ResourceManager.GetString("Missing_required_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SQL connection string (server=&apos;{1}&apos;, database=&apos;{2}&apos;) returned by an instance of the IPartitionResolver type &apos;{0}&apos; cannot contain the connection options &apos;Database&apos;, &apos;Initial Catalog&apos; or &apos;AttachDbFileName&apos;. In order to allow this, allowCustomSqlDatabase attribute must be set to true and the application needs to be granted unrestricted SqlClientPermission. Please check with your administrator if the application does not have this permission..
        /// </summary>
        internal static string No_database_allowed_in_sql_partition_resolver_string {
            get {
                return ResourceManager.GetString("No_database_allowed_in_sql_partition_resolver_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sqlConnectionString attribute or the connection string it refers to cannot contain the connection options &apos;Database&apos;, &apos;Initial Catalog&apos; or &apos;AttachDbFileName&apos;. In order to allow this, allowCustomSqlDatabase attribute must be set to true and the application needs to be granted unrestricted SqlClientPermission. Please check with your administrator if the application does not have this permission..
        /// </summary>
        internal static string No_database_allowed_in_sqlConnectionString {
            get {
                return ResourceManager.GetString("No_database_allowed_in_sqlConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This provider is not configured to allow password resets. To enable password reset, set enablePasswordReset to \true\&quot; in the configuration file.&quot;.
        /// </summary>
        internal static string Not_configured_to_support_password_resets {
            get {
                return ResourceManager.GetString("Not_configured_to_support_password_resets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pageIndex must be greater than or equal to zero..
        /// </summary>
        internal static string PageIndex_bad {
            get {
                return ResourceManager.GetString("PageIndex_bad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The combination of pageIndex and pageSize cannot exceed the maximum value of System.Int32..
        /// </summary>
        internal static string PageIndex_PageSize_bad {
            get {
                return ResourceManager.GetString("PageIndex_PageSize_bad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pageSize must be greater than zero..
        /// </summary>
        internal static string PageSize_bad {
            get {
                return ResourceManager.GetString("PageSize_bad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array parameter &apos;{0}&apos; should not be empty..
        /// </summary>
        internal static string Parameter_array_empty {
            get {
                return ResourceManager.GetString("Parameter_array_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; must not be empty..
        /// </summary>
        internal static string Parameter_can_not_be_empty {
            get {
                return ResourceManager.GetString("Parameter_can_not_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection parameter &apos;{0}&apos; should not be empty..
        /// </summary>
        internal static string Parameter_collection_empty {
            get {
                return ResourceManager.GetString("Parameter_collection_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; must not contain the following character(s) &apos;{1}&apos;..
        /// </summary>
        internal static string Parameter_contains_invalid_characters {
            get {
                return ResourceManager.GetString("Parameter_contains_invalid_characters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array &apos;{0}&apos; should not contain duplicate values..
        /// </summary>
        internal static string Parameter_duplicate_array_element {
            get {
                return ResourceManager.GetString("Parameter_duplicate_array_element", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; is too long: it must not exceed {1} chars in length..
        /// </summary>
        internal static string Parameter_too_long {
            get {
                return ResourceManager.GetString("Parameter_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; does not match the regular expression specified in config file..
        /// </summary>
        internal static string Password_does_not_match_regular_expression {
            get {
                return ResourceManager.GetString("Password_does_not_match_regular_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non alpha numeric characters in &apos;{0}&apos; needs to be greater than or equal to &apos;{1}&apos;..
        /// </summary>
        internal static string Password_need_more_non_alpha_numeric_chars {
            get {
                return ResourceManager.GetString("Password_need_more_non_alpha_numeric_chars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of parameter &apos;{0}&apos; needs to be greater or equal to &apos;{1}&apos;..
        /// </summary>
        internal static string Password_too_short {
            get {
                return ResourceManager.GetString("Password_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The negative value &apos;{0}&apos; is returned when calling provider&apos;s &apos;{1}&apos; method.  The method should return non-negative integer..
        /// </summary>
        internal static string PersonalizationAdmin_UnexpectedPersonalizationProviderReturnValue {
            get {
                return ResourceManager.GetString("PersonalizationAdmin_UnexpectedPersonalizationProviderReturnValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ApplicationName cannot exceed character length {0}..
        /// </summary>
        internal static string PersonalizationProvider_ApplicationNameExceedMaxLength {
            get {
                return ResourceManager.GetString("PersonalizationProvider_ApplicationNameExceedMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified connectionStringName, &apos;{0}&apos;, was not registered..
        /// </summary>
        internal static string PersonalizationProvider_BadConnection {
            get {
                return ResourceManager.GetString("PersonalizationProvider_BadConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection could not be made by the {0} personalization provider using the specified registration..
        /// </summary>
        internal static string PersonalizationProvider_CantAccess {
            get {
                return ResourceManager.GetString("PersonalizationProvider_CantAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connectionStringName attribute must be specified when registering a personalization provider..
        /// </summary>
        internal static string PersonalizationProvider_NoConnection {
            get {
                return ResourceManager.GetString("PersonalizationProvider_NoConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attribute &apos;{0}&apos;, specified in the &apos;{1}&apos; personalization provider registration..
        /// </summary>
        internal static string PersonalizationProvider_UnknownProp {
            get {
                return ResourceManager.GetString("PersonalizationProvider_UnknownProp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; cannot have comma in string value &apos;{1}&apos;..
        /// </summary>
        internal static string PersonalizationProviderHelper_CannotHaveCommaInString {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_CannotHaveCommaInString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; cannot be an empty collection..
        /// </summary>
        internal static string PersonalizationProviderHelper_Empty_Collection {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_Empty_Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; must be greater than or equal to {1}..
        /// </summary>
        internal static string PersonalizationProviderHelper_Invalid_Less_Than_Parameter {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_Invalid_Less_Than_Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; cannot contain more than one entry when &apos;{1}&apos; contains some entries..
        /// </summary>
        internal static string PersonalizationProviderHelper_More_Than_One_Path {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_More_Than_One_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input parameter cannot be negative..
        /// </summary>
        internal static string PersonalizationProviderHelper_Negative_Integer {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_Negative_Integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; cannot be provided when &apos;{1}&apos; is set to &apos;{2}&apos;..
        /// </summary>
        internal static string PersonalizationProviderHelper_No_Usernames_Set_In_Shared_Scope {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_No_Usernames_Set_In_Shared_Scope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; cannot contain null entries..
        /// </summary>
        internal static string PersonalizationProviderHelper_Null_Entries {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_Null_Entries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; cannot contain null or empty string entries..
        /// </summary>
        internal static string PersonalizationProviderHelper_Null_Or_Empty_String_Entries {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_Null_Or_Empty_String_Entries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trimmed entry value &apos;{0}&apos; of input parameter &apos;{1}&apos; cannot exceed character length {2}..
        /// </summary>
        internal static string PersonalizationProviderHelper_Trimmed_Entry_Value_Exceed_Maximum_Length {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_Trimmed_Entry_Value_Exceed_Maximum_Length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input parameter &apos;{0}&apos; cannot be an empty string..
        /// </summary>
        internal static string PersonalizationProviderHelper_TrimmedEmptyString {
            get {
                return ResourceManager.GetString("PersonalizationProviderHelper_TrimmedEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mongo profile provider..
        /// </summary>
        internal static string ProfileProvider_description {
            get {
                return ResourceManager.GetString("ProfileProvider_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; property had a malformed URL: {1}..
        /// </summary>
        internal static string Property_Had_Malformed_Url {
            get {
                return ResourceManager.GetString("Property_Had_Malformed_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application name is too long..
        /// </summary>
        internal static string Provider_application_name_too_long {
            get {
                return ResourceManager.GetString("Provider_application_name_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password format specified is invalid..
        /// </summary>
        internal static string Provider_bad_password_format {
            get {
                return ResourceManager.GetString("Provider_bad_password_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify a non-autogenerated machine key to store passwords in the encrypted or hashed formats. Change the machineKey configuration to use a non-autogenerated validation and decryption key..
        /// </summary>
        internal static string Provider_can_not_autogenerate_machine_key_with_encrypted_or_hashed_password_format {
            get {
                return ResourceManager.GetString("Provider_can_not_autogenerate_machine_key_with_encrypted_or_hashed_password_forma" +
                        "t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashed passwords cannot be decoded..
        /// </summary>
        internal static string Provider_can_not_decode_hashed_password {
            get {
                return ResourceManager.GetString("Provider_can_not_decode_hashed_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured settings are invalid: Hashed passwords cannot be retrieved. Either set the password format to different type, or set supportsPasswordRetrieval to false..
        /// </summary>
        internal static string Provider_can_not_retrieve_hashed_password {
            get {
                return ResourceManager.GetString("Provider_can_not_retrieve_hashed_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Provider encountered an unknown error..
        /// </summary>
        internal static string Provider_Error {
            get {
                return ResourceManager.GetString("Provider_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider &apos;{0}&apos; was not found..
        /// </summary>
        internal static string Provider_Not_Found {
            get {
                return ResourceManager.GetString("Provider_Not_Found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The role &apos;{0}&apos; already exists..
        /// </summary>
        internal static string Provider_role_already_exists {
            get {
                return ResourceManager.GetString("Provider_role_already_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The role &apos;{0}&apos; was not found..
        /// </summary>
        internal static string Provider_role_not_found {
            get {
                return ResourceManager.GetString("Provider_role_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; is already in role &apos;{1}&apos;..
        /// </summary>
        internal static string Provider_this_user_already_in_role {
            get {
                return ResourceManager.GetString("Provider_this_user_already_in_role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; is already not in role &apos;{1}&apos;..
        /// </summary>
        internal static string Provider_this_user_already_not_in_role {
            get {
                return ResourceManager.GetString("Provider_this_user_already_not_in_role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; was not found..
        /// </summary>
        internal static string Provider_this_user_not_found {
            get {
                return ResourceManager.GetString("Provider_this_user_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stored procedure call failed..
        /// </summary>
        internal static string Provider_unknown_failure {
            get {
                return ResourceManager.GetString("Provider_unknown_failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute not recognized &apos;{0}&apos;.
        /// </summary>
        internal static string Provider_unrecognized_attribute {
            get {
                return ResourceManager.GetString("Provider_unrecognized_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured settings are invalid: HashAlgorithm.Create() does not recognize the hash algorithm &apos;{0}&apos;.
        /// </summary>
        internal static string Provider_unrecognized_hash_algorithm {
            get {
                return ResourceManager.GetString("Provider_unrecognized_hash_algorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user was not found in the database..
        /// </summary>
        internal static string Provider_user_not_found {
            get {
                return ResourceManager.GetString("Provider_user_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred. Please check the Event Log..
        /// </summary>
        internal static string ProviderException {
            get {
                return ResourceManager.GetString("ProviderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This role cannot be deleted because there are users present in it..
        /// </summary>
        internal static string Role_is_not_empty {
            get {
                return ResourceManager.GetString("Role_is_not_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mongo role provider..
        /// </summary>
        internal static string RoleProvider_description {
            get {
                return ResourceManager.GetString("RoleProvider_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root node cannot be removed from the providers, use RemoveProvider(string providerName) instead..
        /// </summary>
        internal static string SiteMapProvider_cannot_remove_root_node {
            get {
                return ResourceManager.GetString("SiteMapProvider_cannot_remove_root_node", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personalization provider that stores data in a SQL Server database..
        /// </summary>
        internal static string SqlPersonalizationProvider_Description {
            get {
                return ResourceManager.GetString("SqlPersonalizationProvider_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trimmed string value &apos;{0}&apos; of input parameter &apos;{1}&apos; cannot exceed character length {2}..
        /// </summary>
        internal static string StringUtil_Trimmed_String_Exceed_Maximum_Length {
            get {
                return ResourceManager.GetString("StringUtil_Trimmed_String_Exceed_Maximum_Length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;{0}&apos; is unexpected in the configuration of the &apos;{1}&apos; provider..
        /// </summary>
        internal static string Unexpected_provider_attribute {
            get {
                return ResourceManager.GetString("Unexpected_provider_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be boolean (true or false) for property &apos;{0}&apos;..
        /// </summary>
        internal static string Value_must_be_boolean {
            get {
                return ResourceManager.GetString("Value_must_be_boolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a non-negative 32-bit integer for property &apos;{0}&apos;..
        /// </summary>
        internal static string Value_must_be_non_negative_integer {
            get {
                return ResourceManager.GetString("Value_must_be_non_negative_integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a positive 32-bit integer for property &apos;{0}&apos;..
        /// </summary>
        internal static string Value_must_be_positive_integer {
            get {
                return ResourceManager.GetString("Value_must_be_positive_integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; can not be greater than &apos;{1}&apos;..
        /// </summary>
        internal static string Value_too_big {
            get {
                return ResourceManager.GetString("Value_too_big", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SiteMapNode {0} cannot be found in current provider, only nodes in the same provider can be added..
        /// </summary>
        internal static string XmlSiteMapProvider_cannot_add_node {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_cannot_add_node", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XmlSiteMapProvider cannot be initialized twice..
        /// </summary>
        internal static string XmlSiteMapProvider_Cannot_Be_Inited_Twice {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Cannot_Be_Inited_Twice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider {0} cannot be found inside XmlSiteMapProvider {1}..
        /// </summary>
        internal static string XmlSiteMapProvider_cannot_find_provider {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_cannot_find_provider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SiteMapNode {0} does not exist in provider {1}, it must be removed from provider {2}..
        /// </summary>
        internal static string XmlSiteMapProvider_cannot_remove_node {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_cannot_remove_node", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SiteMap provider which reads in .sitemap XML files..
        /// </summary>
        internal static string XmlSiteMapProvider_Description {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XML sitemap config file {0} could not be loaded.  {1}.
        /// </summary>
        internal static string XmlSiteMapProvider_Error_loading_Config_file {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Error_loading_Config_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sitemap config file {0} is already used by other nodes or providers..
        /// </summary>
        internal static string XmlSiteMapProvider_FileName_already_in_use {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_FileName_already_in_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} required by XmlSiteMapProvider does not exist..
        /// </summary>
        internal static string XmlSiteMapProvider_FileName_does_not_exist {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_FileName_does_not_exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} has an invalid extension, only .sitemap files are allowed in XmlSiteMapProvider..
        /// </summary>
        internal static string XmlSiteMapProvider_Invalid_Extension {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Invalid_Extension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GetRootNode is returning null from Provider {0}, this method must return a non-empty sitemap node..
        /// </summary>
        internal static string XmlSiteMapProvider_invalid_GetRootNodeCore {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_invalid_GetRootNodeCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource key {0} is not valid, it must contain a valid class name and key pair. For example, $resources:&apos;className&apos;,&apos;key&apos;.
        /// </summary>
        internal static string XmlSiteMapProvider_invalid_resource_key {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_invalid_resource_key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider {0} must return a valid sitemap node..
        /// </summary>
        internal static string XmlSiteMapProvider_invalid_sitemapnode_returned {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_invalid_sitemapnode_returned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} attribute must be specified on the XmlSiteMapProvider..
        /// </summary>
        internal static string XmlSiteMapProvider_missing_siteMapFile {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_missing_siteMapFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple nodes with the same key &apos;{0}&apos; were found. XmlSiteMapProvider requires that sitemap nodes have unique keys..
        /// </summary>
        internal static string XmlSiteMapProvider_Multiple_Nodes_With_Identical_Key {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Multiple_Nodes_With_Identical_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple nodes with the same URL &apos;{0}&apos; were found. XmlSiteMapProvider requires that sitemap nodes have unique URLs..
        /// </summary>
        internal static string XmlSiteMapProvider_Multiple_Nodes_With_Identical_Url {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Multiple_Nodes_With_Identical_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot have more than one resource binding on attribute &apos;{0}&apos;. Ensure that this attribute is not bound through an implicit expression, for example, {0}=\$resources:key\&quot;.&quot;.
        /// </summary>
        internal static string XmlSiteMapProvider_multiple_resource_definition {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_multiple_resource_definition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XmlSiteMapProvider is not initialized. Call Initialize() method first..
        /// </summary>
        internal static string XmlSiteMapProvider_Not_Initialized {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Not_Initialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exactly one &lt;siteMapNode&gt; element is required directly inside the &lt;siteMap&gt; element..
        /// </summary>
        internal static string XmlSiteMapProvider_Only_One_SiteMapNode_Required_At_Top {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Only_One_SiteMapNode_Required_At_Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only &lt;siteMapNode&gt; elements are allowed at this location..
        /// </summary>
        internal static string XmlSiteMapProvider_Only_SiteMapNode_Allowed {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Only_SiteMapNode_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource key cannot be empty..
        /// </summary>
        internal static string XmlSiteMapProvider_resourceKey_cannot_be_empty {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_resourceKey_cannot_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top element must be siteMap..
        /// </summary>
        internal static string XmlSiteMapProvider_Top_Element_Must_Be_SiteMap {
            get {
                return ResourceManager.GetString("XmlSiteMapProvider_Top_Element_Must_Be_SiteMap", resourceCulture);
            }
        }
    }
}
